{"version":3,"file":"components-UncontrolledOnOff-UncontrolledOnOff-stories.f9f5395c16049a7ccf5f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAOA;AAAA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAnDA","sources":["webpack://cra-console/./src/components/UncontrolledOnOff/UncontrolledOnOff.stories.tsx","webpack://cra-console/./src/components/UncontrolledOnOff/UncontrolledOnOff.tsx"],"sourcesContent":["import {action} from '@storybook/addon-actions';\nimport {UncontrolledOnOff} from './UncontrolledOnOff';\nimport React from \"react\";\n\n\n\nexport default  {\n    title: 'UncontrolledOnOff',\n    component: UncontrolledOnOff\n}\n\nconst callback = action('accordion mode change event fired')\n\n\nexport const ModeChanging = () => {\n    return <UncontrolledAccordion titleValue={\"Users\"}/>\n}","import {useState} from \"react\";\n\ntype PropsType = {\n    onChange: (on: boolean) => void\n}\n\n\nexport function UncontrolledOnOff(props: PropsType) {\n\n    let [on, setOn] = useState(false);\n\n    // console.log(\"on: \" + on)\n\n    const onStyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        backgroundColor: on ? \"green\" : \"white\"\n    }\n    const offStyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        marginLeft: \"2px\",\n        padding: \"2px\",\n        backgroundColor: on ? \"white\" : \"red\"\n    }\n    const indicatorStyle = {\n        width: \"10px\",\n        height: \"10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        marginLeft: \"5px\",\n        backgroundColor: on ? \"green\" : \"red\"\n    }\n\n    const onClickHandler = () => {\n        setOn(true)\n        props.onChange(true)\n    }\n\n    const offClickHandler = () => {\n        setOn(false)\n        props.onChange(false)\n    }\n\n\n    return <div>\n        <div style={onStyle} onClick={onClickHandler}>On\n        </div>\n        <div style={offStyle} onClick={offClickHandler}>Off\n        </div>\n        <div style={indicatorStyle}></div>\n    </div>\n}\n\n"],"names":[],"sourceRoot":""}