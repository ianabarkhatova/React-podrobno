{"version":3,"file":"components-UncontrolledAccordion-UncontrolledAccordion-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAZA;AAoBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://cra-console/./node_modules/@storybook/addon-actions/dist/chunk-454WOBUV.mjs","webpack://cra-console/./node_modules/@storybook/addon-actions/dist/index.mjs","webpack://cra-console/./src/components/UncontrolledAccordion/UncontrolledAccordion.stories.tsx","webpack://cra-console/./src/components/UncontrolledAccordion/UncontrolledAccordion.tsx","webpack://cra-console/./src/components/UncontrolledAccordion/reducer.tsx"],"sourcesContent":["import { v4 } from 'uuid';\nimport { addons } from 'storybook/internal/preview-api';\nimport { global } from '@storybook/global';\nimport { ImplicitActionsDuringRendering } from 'storybook/internal/preview-errors';\n\nvar PARAM_KEY=\"actions\",ADDON_ID=\"storybook/actions\",PANEL_ID=`${ADDON_ID}/panel`,EVENT_ID=`${ADDON_ID}/action-event`,CLEAR_ID=`${ADDON_ID}/action-clear`,CYCLIC_KEY=\"$___storybook.isCyclic\";var config={depth:10,clearOnStoryChange:!0,limit:50},configureActions=(options={})=>{Object.assign(config,options);};var findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return !proto||callback(proto)?proto:findProto(proto,callback)},isReactSyntheticEvent=e=>!!(typeof e==\"object\"&&e&&findProto(e,proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name))&&typeof e.persist==\"function\"),serializeArg=a=>{if(isReactSyntheticEvent(a)){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,\"view\"),view=viewDescriptor?.value;return typeof view==\"object\"&&view?.constructor.name===\"Window\"&&Object.defineProperty(e,\"view\",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}return a},generateId=()=>typeof crypto==\"object\"&&typeof crypto.getRandomValues==\"function\"?v4():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=(\"__STORYBOOK_PREVIEW__\"in global?global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find(render=>render.phase===\"playing\"||render.phase===\"rendering\");if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(deprecated)console.warn(error);else throw error}}let channel=addons.getChannel(),id=generateId(),minDepth=5,serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:minDepth+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit);};return handler.isAction=!0,handler.implicit=options.implicit,handler}var actions=(...args)=>{let options=config,names=args;names.length===1&&Array.isArray(names[0])&&([names]=names),names.length!==1&&typeof names[names.length-1]!=\"string\"&&(options={...config,...names.pop()});let namesObject=names[0];(names.length!==1||typeof namesObject==\"string\")&&(namesObject={},names.forEach(name=>{namesObject[name]=name;}));let actionsObject={};return Object.keys(namesObject).forEach(name=>{actionsObject[name]=action(namesObject[name],options);}),actionsObject};\n\nexport { ADDON_ID, CLEAR_ID, CYCLIC_KEY, EVENT_ID, PANEL_ID, PARAM_KEY, action, actions, config, configureActions };\n","export { ADDON_ID, CLEAR_ID, CYCLIC_KEY, EVENT_ID, PANEL_ID, PARAM_KEY, action, actions, config, configureActions } from './chunk-454WOBUV.mjs';\n","import {action} from '@storybook/addon-actions';\nimport {UncontrolledAccordion} from './UncontrolledAccordion';\nimport React, {useState} from \"react\";\n\n\n\nexport default  {\n    title: 'UncontrolledAccordion',\n    component: UncontrolledAccordion\n}\n\nconst callback = action('accordion mode change event fired')\n\n\nexport const ModeChanging = () => {\n    return <UncontrolledAccordion titleValue={\"Users\"}/>\n}","import React, {useReducer} from 'react';\nimport {reducer, toggle_closed} from \"./reducer\";\n\ntype AccordionPropsType = {\n    titleValue: string\n}\n\nexport function UncontrolledAccordion(props: AccordionPropsType) {\n\n    let [state, dispatch] = useReducer(reducer, {closed: false})\n\n\n    return <div>\n        {/*<AccordionTitle title={props.titleValue} onClick={toggleAccordion}/>*/}\n        <AccordionTitle title={props.titleValue} onClick={() => {\n            dispatch({type: toggle_closed})\n        }}/>\n        {!state.closed && <AccordionBody/>}\n    </div>\n}\n\n\ntype AccordionTitlePropsType = {\n    title: string\n    onClick: () => void\n}\n\nfunction AccordionTitle(props: AccordionTitlePropsType) {\n    return (\n        <div><h3 onClick={props.onClick}>{props.title}</h3></div> // Step 5\n    )\n}\n\nfunction AccordionBody() {\n\n    return (\n        <div>\n            <ul>\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n            </ul>\n        </div>\n    )\n}\n\n","type ActionType = {\n    type: string\n}\n\nexport const toggle_closed = 'Toggle collapsed'\n\nexport type StateType = {\n    closed: boolean\n}\n\nexport const reducer = (state: StateType, action: ActionType): StateType => {\n\n    switch (action.type) {\n        case toggle_closed:\n            return {\n                ...state,\n                closed: !state.closed\n            }\n        default:\n            throw new Error('Bad action type')\n    }\n    return state;\n}"],"names":[],"sourceRoot":""}