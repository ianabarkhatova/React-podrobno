{"version":3,"file":"components-UncontrolledAccordion-UncontrolledAccordion-stories.ffd028b05b24c71c9823.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;;AAEA;AAAA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAbA;AAqBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA","sources":["webpack://cra-console/./src/components/UncontrolledAccordion/UncontrolledAccordion.stories.tsx","webpack://cra-console/./src/components/UncontrolledAccordion/UncontrolledAccordion.tsx"],"sourcesContent":["import {action} from '@storybook/addon-actions';\nimport {UncontrolledAccordion} from './UncontrolledAccordion';\nimport React, {useState} from \"react\";\n\n\n\nexport default  {\n    title: 'Uncontrolled Accordion',\n    component: UncontrolledAccordion\n}\n\nconst onChangeHandler = action('onChange')\n\n\nexport const ClosedAccordion = () => {\n    return <Accordion titleValue={\"Closed Accordion\"}\n                      closed={true}\n                      onChange={onChangeHandler}/>\n}\n\nexport const OpenedAccordion = () => {\n    return <Accordion titleValue={\"Opened Accordion\"}\n                      closed={false}\n                      onChange={() => {\n                      }}/>\n}\n\nexport const AccordionDemo = () => {\n    const [closed, setClosed] = useState(false)\n    return <Accordion titleValue={\"Accordion Demo\"}\n                      closed={closed}\n                      onChange={() => {\n                          setClosed(!closed)\n                      }}/>\n}\n","import React, {useState} from 'react';\n\n//рядом с компонентом лежит тип, который определяет, что компонент должен принимать:\ntype AccordionPropsType = {\n    titleValue: string\n}\n\nexport function UncontrolledAccordion(props: AccordionPropsType) {\n\n    let[closed, setClosed] = useState(true)\n\n    const toggleAccordion = () => {\n        setClosed(!closed)\n    }\n\n    return <div>\n        <AccordionTitle title={props.titleValue} onClick={toggleAccordion}/>\n        {/*<button onClick={toggleAccordion}>Toggle</button>*/}\n        {!closed && <AccordionBody/>}\n    </div>\n}\n\n\ntype AccordionTitlePropsType = {\n    title: string\n    onClick: () => void\n}\n\nfunction AccordionTitle(props: AccordionTitlePropsType) {\n    return (\n        <div><h3 onClick={props.onClick}>{props.title}</h3></div> // Step 5\n    )}\n\nfunction AccordionBody() {\n\n    return (\n        <div>\n            <ul>\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n            </ul>\n        </div>\n    )\n}\n\n"],"names":[],"sourceRoot":""}