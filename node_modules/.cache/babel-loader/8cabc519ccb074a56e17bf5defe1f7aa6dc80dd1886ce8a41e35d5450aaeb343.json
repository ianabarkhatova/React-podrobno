{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/IT-Incubator/Sprint-1/React-podrobno/src/components/UncontrolledRating/UncontrolledRating.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//создать тип компонента:\n//это объект, у которого есть свойство value, являющееся number.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UncontrolledRating(props) {\n  _s();\n  // props должны являться объектом, который соответствует описанию RatingPropsType (выше)\n\n  let [value, setValue] = useState(0);\n  const changeStar = () => {\n    setValue(value + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"debugger\", /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeStar,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeStar,\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeStar,\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n}\n\n/*if we want to return a group of elements, we need to wrap them in one parent element (below).\nOnly one element can be returned.*/\n\n/*Props - те данные, которые входят в компонент для того, чтобы компонент мог на основе этих данных\nсделать другую отрисовку*/\n\n//Компонент ждет входные данные, чтобы отрисоваться по-разному, отреагировать на то, что в него передают.\n\n// На входе мы дает компоненту объект, этот объект приходит в аттрибут функции, который называется props, \n_s(UncontrolledRating, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c = UncontrolledRating;\nfunction Star(props) {\n  if (props.selected) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"star \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this);\n  }\n}\n_c2 = Star;\nvar _c, _c2;\n$RefreshReg$(_c, \"UncontrolledRating\");\n$RefreshReg$(_c2, \"Star\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UncontrolledRating","props","_s","value","setValue","changeStar","children","Star","selected","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","_c2","$RefreshReg$"],"sources":["/Users/admin/Desktop/IT-Incubator/Sprint-1/React-podrobno/src/components/UncontrolledRating/UncontrolledRating.tsx"],"sourcesContent":["import React, {useState} from \"react\";\n\n//создать тип компонента:\n//это объект, у которого есть свойство value, являющееся number.\n\ntype UncontrolledRatingPropsType = {\n\n}\n\nexport function UncontrolledRating(props: UncontrolledRatingPropsType) { // props должны являться объектом, который соответствует описанию RatingPropsType (выше)\n\n    let[value, setValue] = useState(0)\n\n    const changeStar = () => {\n        setValue(value + 1)\n    }\n\n\n    return (<div>\n        debugger\n        <Star selected={value > 0}/>\n        <button onClick={changeStar}>1</button>\n        <Star selected={value > 1}/>\n        <button onClick={changeStar}>2</button>\n        <Star selected={value > 2}/>\n        <button onClick={changeStar}>3</button>\n        <Star selected={value > 3}/>\n        <button>4</button>\n        <Star selected={value > 4}/>\n        <button>5</button>\n    </div>)\n}\n\n/*if we want to return a group of elements, we need to wrap them in one parent element (below).\nOnly one element can be returned.*/\n\n      /*Props - те данные, которые входят в компонент для того, чтобы компонент мог на основе этих данных\n      сделать другую отрисовку*/\n\n      //Компонент ждет входные данные, чтобы отрисоваться по-разному, отреагировать на то, что в него передают.\n\n      // На входе мы дает компоненту объект, этот объект приходит в аттрибут функции, который называется props, \n      \n  type StarPropsType = {\n    selected: boolean\n  }\n\n  function Star(props: StarPropsType) {\n    if (props.selected) {\n      return <span><b>star</b> </span>\n    } else {\n      return <span>star </span>\n    }\n  }\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}