{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/IT-Incubator/Sprint-1/React-podrobno/src/components/Rating/Rating.tsx\";\nimport React from \"react\";\n\n//создать тип компонента:\n//это объект, у которого есть свойство value, являющееся number.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Rating(props) {\n  // props должны являться объектом, который соответствует описанию RatingPropsType (выше)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Star, {\n      selected: props.value > 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: props.value > 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: props.value > 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: props.value > 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: props.value > 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n}\n\n/*if we want to return a group of elements, we need to wrap them in one parent element (below). \nOnly one element can be returned.*/\n\n/*Props - те данные, которые входят в компонент для того, чтобы компонент мог на основе этих данных\nсделать другую отрисовку*/\n\n//Компонент ждет входные данные, чтобы отрисоваться по-разному, отреагировать на то, что в него передают.\n\n// На входе мы дает компоненту объект, этот объект приходит в аттрибут функции, который называется props, \n_c = Rating;\nfunction Star(props) {\n  if (props.selected) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"star \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  }\n}\n_c2 = Star;\nvar _c, _c2;\n$RefreshReg$(_c, \"Rating\");\n$RefreshReg$(_c2, \"Star\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Rating","props","children","Star","selected","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["/Users/admin/Desktop/IT-Incubator/Sprint-1/React-podrobno/src/components/Rating/Rating.tsx"],"sourcesContent":["import React from \"react\";\n\n//создать тип компонента:\n//это объект, у которого есть свойство value, являющееся number.\n\ntype RatingPropsType = {\n  value: 0 | 1 | 2 | 3 | 4 | 5\n}\n\nexport function Rating(props: RatingPropsType) { // props должны являться объектом, который соответствует описанию RatingPropsType (выше)\n\n    return (<div>\n        <Star selected={props.value > 0}/>\n        <Star selected={props.value > 1}/>\n        <Star selected={props.value > 2}/>\n        <Star selected={props.value > 3}/>\n        <Star selected={props.value > 4}/>\n    </div>)\n    }\n\n      /*if we want to return a group of elements, we need to wrap them in one parent element (below). \n      Only one element can be returned.*/\n\n      /*Props - те данные, которые входят в компонент для того, чтобы компонент мог на основе этих данных\n      сделать другую отрисовку*/\n\n      //Компонент ждет входные данные, чтобы отрисоваться по-разному, отреагировать на то, что в него передают.\n\n      // На входе мы дает компоненту объект, этот объект приходит в аттрибут функции, который называется props, \n      \n  type StarPropsType = {\n    selected: boolean\n  }\n\n  function Star(props: StarPropsType) {\n    if (props.selected) {\n      return <span><b>star</b> </span>\n    } else {\n      return <span>star </span>\n    }\n  }\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,OAAO,SAASC,MAAMA,CAACC,KAAsB,EAAE;EAAE;;EAE7C,oBAAQF,OAAA;IAAAG,QAAA,gBACJH,OAAA,CAACI,IAAI;MAACC,QAAQ,EAAEH,KAAK,CAACI,KAAK,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClCV,OAAA,CAACI,IAAI;MAACC,QAAQ,EAAEH,KAAK,CAACI,KAAK,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClCV,OAAA,CAACI,IAAI;MAACC,QAAQ,EAAEH,KAAK,CAACI,KAAK,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClCV,OAAA,CAACI,IAAI;MAACC,QAAQ,EAAEH,KAAK,CAACI,KAAK,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClCV,OAAA,CAACI,IAAI;MAACC,QAAQ,EAAEH,KAAK,CAACI,KAAK,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AACN;;AAEE;AACN;;AAEM;AACN;;AAEM;;AAEA;AAAAC,EAAA,GAnBUV,MAAM;AAyBpB,SAASG,IAAIA,CAACF,KAAoB,EAAE;EAClC,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,oBAAOL,OAAA;MAAAG,QAAA,gBAAMH,OAAA;QAAAG,QAAA,EAAG;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC,CAAC,MAAM;IACL,oBAAOV,OAAA;MAAAG,QAAA,EAAM;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;AACF;AAACE,GAAA,GANQR,IAAI;AAAA,IAAAO,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}