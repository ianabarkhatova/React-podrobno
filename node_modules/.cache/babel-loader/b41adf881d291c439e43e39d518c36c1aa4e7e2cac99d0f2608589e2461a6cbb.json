{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/IT-Incubator/Sprint-1/React-podrobno/src/components/UncontrolledRating/UncontrolledRating.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//создать тип компонента:\n//это объект, у которого есть свойство value, являющееся number.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UncontrolledRating(props) {\n  _s();\n  // props должны являться объектом, который соответствует описанию RatingPropsType (выше)\n\n  let [value, setValue] = useState(props.defaultValue ? props.defaultValue : 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 0,\n      setValue: () => {\n        setValue(1);\n        props.onChange(1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 1,\n      setValue: () => setValue(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 2,\n      setValue: () => setValue(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 3,\n      setValue: () => setValue(4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      selected: value > 4,\n      setValue: () => setValue(5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n}\n\n/*if we want to return a group of elements, we need to wrap them in one parent element (below).\nOnly one element can be returned.*/\n\n/*Props - те данные, которые входят в компонент для того, чтобы компонент мог на основе этих данных\nсделать другую отрисовку*/\n\n//Компонент ждет входные данные, чтобы отрисоваться по-разному, отреагировать на то, что в него передают.\n\n// На входе мы дает компоненту объект, этот объект приходит в аттрибут функции, который называется props,\n_s(UncontrolledRating, \"K0MwOkf6L5xIW1JJ6eLUWQJHIFc=\");\n_c = UncontrolledRating;\nfunction Star(props) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: () => props.setValue(),\n    children: props.selected ? /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"star \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this) : \"star \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Star;\n;\nUncontrolledRating.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"UncontrolledRating\",\n  \"props\": {\n    \"defaultValue\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"0 | 1 | 2 | 3 | 4 | 5\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"0\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"1\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"2\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"3\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"4\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"5\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(value: RatingValuePropsType) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"type\": {\n              \"name\": \"union\",\n              \"raw\": \"0 | 1 | 2 | 3 | 4 | 5\",\n              \"elements\": [{\n                \"name\": \"literal\",\n                \"value\": \"0\"\n              }, {\n                \"name\": \"literal\",\n                \"value\": \"1\"\n              }, {\n                \"name\": \"literal\",\n                \"value\": \"2\"\n              }, {\n                \"name\": \"literal\",\n                \"value\": \"3\"\n              }, {\n                \"name\": \"literal\",\n                \"value\": \"4\"\n              }, {\n                \"name\": \"literal\",\n                \"value\": \"5\"\n              }]\n            },\n            \"name\": \"value\"\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    }\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"UncontrolledRating\");\n$RefreshReg$(_c2, \"Star\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UncontrolledRating","props","_s","value","setValue","defaultValue","children","Star","selected","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","onClick","_c2"],"sources":["/Users/admin/Desktop/IT-Incubator/Sprint-1/React-podrobno/src/components/UncontrolledRating/UncontrolledRating.tsx"],"sourcesContent":["import React, {useState} from \"react\";\n\n//создать тип компонента:\n//это объект, у которого есть свойство value, являющееся number.\n\nexport type RatingValuePropsType = 0 | 1 | 2 | 3 | 4 | 5\n\ntype UncontrolledRatingPropsType = {\n    defaultValue?: RatingValuePropsType\n    onChange: (value: RatingValuePropsType) => void\n}\n\nexport function UncontrolledRating(props: UncontrolledRatingPropsType) { // props должны являться объектом, который соответствует описанию RatingPropsType (выше)\n\n    let [value, setValue] = useState<RatingValuePropsType>(props.defaultValue ? props.defaultValue: 0 )\n\n    return (<div>\n        <Star selected={value > 0} setValue={() => { setValue(1); props.onChange(1); }} />\n        <Star selected={value > 1} setValue={()=> setValue(2)}/>\n        <Star selected={value > 2} setValue={()=> setValue(3)}/>\n        <Star selected={value > 3} setValue={()=> setValue(4)}/>\n        <Star selected={value > 4} setValue={()=> setValue(5)}/>\n\n        {/*<Star selected={value > 0}/>*/}\n        {/*<button onClick={() => {setValue(1)}}>1</button>*/}\n        {/*<Star selected={value > 1}/>*/}\n        {/*<button onClick={() => {setValue(2)}}>2</button>*/}\n        {/*<Star selected={value > 2}/>*/}\n        {/*<button onClick={() => {setValue(3)}}>3</button>*/}\n        {/*<Star selected={value > 3}/>*/}\n        {/*<button onClick={() => {setValue(4)}}>4</button>*/}\n        {/*<Star selected={value > 4}/>*/}\n        {/*<button onClick={() => {setValue(5)}}>5</button>*/}\n    </div>)\n}\n\n/*if we want to return a group of elements, we need to wrap them in one parent element (below).\nOnly one element can be returned.*/\n\n/*Props - те данные, которые входят в компонент для того, чтобы компонент мог на основе этих данных\nсделать другую отрисовку*/\n\n//Компонент ждет входные данные, чтобы отрисоваться по-разному, отреагировать на то, что в него передают.\n\n// На входе мы дает компоненту объект, этот объект приходит в аттрибут функции, который называется props,\n\ntype StarPropsType = {\n    selected: boolean\n    setValue: () => void\n    // setValue: (value: 1 | 2 | 3 | 4 | 5) => void\n    // value: 1 | 2 | 3 | 4 | 5\n}\n\nfunction Star(props: StarPropsType) {\n    return <span onClick={()=> props.setValue()}>\n          {props.selected ? <b>star </b> : \"star \"}\n      </span>\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAErC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA,OAAO,SAASC,kBAAkBA,CAACC,KAAkC,EAAE;EAAAC,EAAA;EAAE;;EAErE,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAuBI,KAAK,CAACI,YAAY,GAAGJ,KAAK,CAACI,YAAY,GAAE,CAAE,CAAC;EAEnG,oBAAQN,OAAA;IAAAO,QAAA,gBACJP,OAAA,CAACQ,IAAI;MAACC,QAAQ,EAAEL,KAAK,GAAG,CAAE;MAACC,QAAQ,EAAEA,CAAA,KAAM;QAAEA,QAAQ,CAAC,CAAC,CAAC;QAAEH,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFd,OAAA,CAACQ,IAAI;MAACC,QAAQ,EAAEL,KAAK,GAAG,CAAE;MAACC,QAAQ,EAAEA,CAAA,KAAKA,QAAQ,CAAC,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxDd,OAAA,CAACQ,IAAI;MAACC,QAAQ,EAAEL,KAAK,GAAG,CAAE;MAACC,QAAQ,EAAEA,CAAA,KAAKA,QAAQ,CAAC,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxDd,OAAA,CAACQ,IAAI;MAACC,QAAQ,EAAEL,KAAK,GAAG,CAAE;MAACC,QAAQ,EAAEA,CAAA,KAAKA,QAAQ,CAAC,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxDd,OAAA,CAACQ,IAAI;MAACC,QAAQ,EAAEL,KAAK,GAAG,CAAE;MAACC,QAAQ,EAAEA,CAAA,KAAKA,QAAQ,CAAC,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYvD,CAAC;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AAAAX,EAAA,CAhCgBF,kBAAkB;AAAAc,EAAA,GAAlBd,kBAAkB;AAyClC,SAASO,IAAIA,CAACN,KAAoB,EAAE;EAChC,oBAAOF,OAAA;IAAMgB,OAAO,EAAEA,CAAA,KAAKd,KAAK,CAACG,QAAQ,CAAC,CAAE;IAAAE,QAAA,EACrCL,KAAK,CAACO,QAAQ,gBAAGT,OAAA;MAAAO,QAAA,EAAG;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AACb;AAACG,GAAA,GAJQT,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}